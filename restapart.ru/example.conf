# nginx.conf

############################
# 1) HTTP -> HTTPS redirect
############################
server {
    listen 31.129.98.8:80;
    server_name restapart.ru www.restapart.ru;

    # минимальный блок: сразу уводим трафик на HTTPS
    return 301 https://restapart.ru$request_uri;
}

############################
# 2) Основной HTTPS-сервер
############################
server {
    listen 31.129.98.8:443 ssl;
    http2 on;
    server_name restapart.ru www.restapart.ru;

    # --- SSL и шифры ---
    ssl_certificate      "/var/www/httpd-cert/www-root/restapart.ru_le1.crtca";
    ssl_certificate_key  "/var/www/httpd-cert/www-root/restapart.ru_le1.key";
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_dhparam /etc/ssl/certs/dhparam4096.pem;
    
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;

    # OCSP Stapling (опционально; нужен исправный resolver)
    # resolver 1.1.1.1 1.0.0.1 valid=300s ipv6=off;
    # ssl_stapling on;
    # ssl_stapling_verify on;

    # --- Базовые настройки сайта ---
    charset off;
    index index.php index.html;

    set  $root_path /var/www/www-root/data/www/restapart.ru;
    root $root_path;

    # ISPmanager/пользовательские инклюды — не трогаем
    disable_symlinks if_not_owner from=$root_path;
    include /etc/nginx/vhosts-includes/*.conf;
    include /etc/nginx/vhosts-resources/restapart.ru/*.conf;
    include /etc/nginx/users-resources/www-root/*.conf;

    access_log /var/www/httpd-logs/restapart.ru.access.log;
    error_log  /var/www/httpd-logs/restapart.ru.error.log notice;

    ssi on;

    # --- Сжатие (митигируем BREACH) ---
    gzip on;
    gzip_comp_level 5;
    gzip_disable "msie6";
    gzip_min_length 1024;
    gzip_vary on;
    # не сжимаем ответы, которые потенциально содержат приватные данные (auth/private)
    gzip_proxied no-cache no-store private expired auth;
    gzip_types
        text/plain text/css text/xml application/xml application/xml+rss
        application/javascript application/x-javascript application/json
        image/svg+xml;

    # --- Заголовки безопасности ---
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # HSTS — после проверки можно добавить "; preload" и занести домен в preload‑лист
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # CSP сначала в режиме отчёта, чтобы ничего не сломать (при желании включим «боевой»)
    add_header Content-Security-Policy-Report-Only "default-src 'self' https: data:; img-src 'self' https: data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' https: data:;" always;

    # Ограничение API браузера
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), microphone=(), usb=()" always;

    error_page 404 /404.html;

    # --- Доступ к потенциально опасным директориям ---
    location ^~ /admin/ { deny all; }
    location ^~ /tmp/   { deny all; }

    # Блокируем доступ к dot-файлам (например, .git, .env), кроме /.well-known
    location ~ /\.(?!well-known) {
        deny all;
    }

    # Запрет выполнения .php из статических каталогов (подстрой по своим путям при необходимости)
    location ~* /(uploads|upload|files|images|img|media|static)/.*\.php$ {
        deny all;
    }

    # Главный роутинг
    location / {
        # блокируем прямой вызов .php-файлов из корня через URI
        location ~ [^/]\.ph(p\d*|tml)$ {
            try_files /does_not_exists @php;
        }

        # кэш статических
        location ~* \.(?:ico|jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|swf|webp|woff2?)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
        }

        try_files $uri $uri.html $uri/ /index.php?$args;
    }

    # Убираем .html из URL (если такие есть)
    location ~ ^/(.+)\.html$ {
        return 301 /$1$is_args$args;
    }

    # PHP-FPM
    location @php {
        include /etc/nginx/vhosts-resources/restapart.ru/dynamic/*.conf;
        fastcgi_index index.php;
        fastcgi_param PHP_ADMIN_VALUE "sendmail_path = /usr/sbin/sendmail -t -i -f webmaster@restapart.ru";
        fastcgi_param PHP_VALUE "zlib.output_compression=0";
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_split_path_info ^((?U).+\.ph(?:p\d*|tml))(/?.+)$;
        try_files $uri =404;
        include fastcgi_params;
    }
}
